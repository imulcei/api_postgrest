services:
  server:
    image: postgrest/postgrest
    ports:
      - "3000:3000"
    volumes:
      - ./conf/postgrest.conf:/etc/postgrest.conf
    environment:
      PGRST_JWT_SECRET: "${JWT_SECRET}"  # Secret injecté dynamiquement
    command: postgrest /etc/postgrest.conf
    depends_on:
      postgres:
        condition: service_healthy # Ajout d'une condition sur healthcheck pour attendre le démarrage correct du container Postgre

  postgres:
    container_name: api-test-db
    image: postgres:17.5
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=apitest
    ports:
      - "5432:5432"
    restart: always
    volumes:
      # - ./postgresql/data:/var/lib/postgresql/data # Désactivation du montage du volume de façon à ne pas avoir plein de fichiers sur le disque et sur Git. A reactiver en production si backup nécessaire.
      - ./db/:/docker-entrypoint-initdb.d/

    healthcheck:
      test: ["CMD-SHELL", "psql -U ${POSTGRES_USER} -d apitest -c 'SELECT 1' || exit 1"] # Tentative de connection avec requête SELECT. Si okay -> le container est considéré comme healthy.
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s

  swagger:
    image: swaggerapi/swagger-ui
    ports:
      - "8081:8080"
    expose:
      - "8080"
    environment:
      API_URL: http://localhost:3000/